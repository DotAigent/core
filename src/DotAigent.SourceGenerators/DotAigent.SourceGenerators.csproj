<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <!--<EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>-->
    <IsRoslynComponent>true</IsRoslynComponent>
    <RootNamespace>DotAigent.SourceGenerators</RootNamespace>
    <IncludeBuildOutput>false</IncludeBuildOutput>
  </PropertyGroup>

  <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.11.0" privateAssets="all"/>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.12.0" privateAssets="all"/>
    <PackageReference Include="PolySharp" Version="*">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
  <ItemGroup>
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\DotAigent.SourceGenerators.SharedLibrary\DotAigent.SourceGenarators.SharedLibrary.csproj" />
  </ItemGroup>
</Project>
